#!/usr/bin/perl
# Copyright 2012-2013, Olof Johansson <olof@ethup.se>
#
# Copying and distribution of this file, with or without
# modification, are permitted in any medium without royalty
# provided the copyright notice are preserved. This file is
# offered as-is, without any warranty.

use 5.10.0;
use warnings FATAL => 'all';
use strict;

our $APP = 'transmish';
our $VERSION = 0.1;

use App::transmish::Out;
use App::transmish::Command;
use App::transmish::Client;
use App::transmish::Utils qw/read_file strrange/;

use Getopt::Long qw/:config gnu_getopt/;
use Term::ReadLine;
use Text::ParseWords;
use MIME::Base64;
use IO::Interactive qw/is_interactive/;
use Pod::Usage;

use App::transmish::cmd::torrent;
use App::transmish::cmd::list;
use App::transmish::cmd::add;

my $debug = 3;
my $term;

cmd 'foreach' => sub {
	my @ids;
	while (@_) {
		last if $_[0] eq 'do';
		push @ids, strrange(shift);
	}
	shift; # Also drop the 'do'.

	for (@ids) {
		run 'torrent', $_, @_;
	}
};

cmd help => sub {
	my $cmd = shift;
	my %commands = map { $_ => 1 } cmds;

	if($cmd) {
		if($commands{$cmd}) {
			pod2usage(
				-verbose => 99,
				-sections => ["COMMANDS/$cmd"],
				-exitval => 'NOEXIT',
			);
		} else {
			error "No such commands: '$cmd'";
		}
	} else {
		say "Available commands:";
		say "  $_" for keys %commands;
		say "Do 'help <command>' for more info";
	}
};

cmd quit => sub { exit 0 };
alias q => 'quit';

sub gen_matches {
	my($text, $buf, $start, $end) = @_;

	if(substr($buf, 0, $start) =~ /^\s*$/) {
		my @ret = grep { /^$buf/ } ('', cmds);
		#unshift @ret, '' if @ret > 1;
		return @ret;
	} else {
		return ();
	}
}

sub help {
	pod2usage(
		-verbose => 99,
		-sections => [qw/NAME OPTIONS/],
	);
}

# FIXME: do getopt
my $opts = {
	help => sub { help() },
	verbose => 0,
	config => "$ENV{HOME}/.transmishrc",
};
GetOptions($opts,
	'help|h',
	'verbose|v+',
	'config|c=s',
) or exit 1;

crap "No non-interactive support yet" unless is_interactive;

App::transmish::Out::dbglvl($opts->{verbose});
App::transmish::Config::load($opts->{config});
$term = Term::ReadLine->new('transmish');

my $attr = $term->Attribs;
$attr->{attempted_completion_function} = \&gen_matches;
my $out = $term->OUT // \*STDOUT;

while(defined (my $row = $term->readline('> '))) {
	$row =~ s/^\s*//;
	$row =~ s/\s*$//;
	next unless $row;

	# FIXME: For some reason both the whitespace stripped $row as
	# well as the non-stripped $row seem to get added to history.
	$term->addhistory($row);

	# Parse line with shell style quoting
	my @tokens = parse_line(qr/\s+/, 0, $row);
	if (@tokens) {
		run @tokens;
	} else {
		say "Error: Syntax error!"
	}
}

=head1 NAME

transmish, a transmission shell interface

=head1 DESCRIPTION

This is a simple shell interface for the Transmission bittorrent
client.

=head1 OPTIONS

 --config -c <file>  specify configuration file to use (default ~/.transmishrc)
 --debug -d          increase debug level (can be used multiple times)
 --help -h           shows a listing of the possible flags

=head1 COMMANDS

=head2 list

List all torrents. Or supply a list of torrent ids to show. You
can list torrent ids one by one or using a range syntax, or
combine:

   list 1 2 5-10 30 50-100

You can also supply the argument -1 to make the list compact
(each torrent occupies one line, hence the flag name).

=head2 active

List all active torrents; that is torrents which Transmission
claims to have connected peers with. Accepts same kind of
arguments as list. See help list.

=head2 grep

Search torrents by name (perl compatible regular expression to be
precise). The first argument is the regular expression. You can
limit your grepping to a certain set of torrent ids by supplying
them as additional arguments using the same syntax as list. It
accepts all the flags list does, see 'help list' for details.

=head2 torrent

Show info for a specific torrent. Takes the id of the torrent
as argument, optionally followed by a sub command:

=head3 files

List all files and their current status (percent downloaded,
marked for download, filename etc).

=head3 files <on|off> [regexp]

Mark or unmark files for download. You can optionally supply a
perl compatible regular expression limiting what files you want
to mark/unmark. E.g., the following will mark all files
containing S01E01 for download:

    torrent 123 files on S01E01

=head3 start

Start the torrent after it has been stopped.

=head3 stop

Stop the torrent from up- and downloading.

=head3 rm

Remove the torrent (more or less an alias for the top level rm
command). Accepts a -d flag, making it actually remote the data.

=head3 set

Show or modify per torrent settings. Not implemented yet :(

=head3 move <path>

Move the torrent to a new path. This will physically move the
data. The path is a path on the host running transmission-daemon,
not your local host (if they're not the same).

=head2 foreach

Run a torrent command for several torrents at once. Takes a list
of torrents using the same syntax as the list command, followed
by the keyword "do" and then the command to be executed. Examples
follow:

    foreach 1 2 3 do       # simply shows the torrents
    # This translates to
    torrent 1
    torrent 2
    torrent 3

    foreach 1-5 do rm      # remove torrent 1-5

=head2 add

Add torrent, either as a path to a local file or as an URI.

=head2 rm

Remove torrent. Takes the id of the torrent as argument. There
will be no confirmation dialog so make sure not to do any typos
(this is subject to change). By default, it will only remove the
torrent in the sense that it will disassociate the torrent from
transmission, but it does accept a -d flag to make it actually
remove the data as well.

=head2 quit

Quit transmish. "q" is an alias for quit.

=head2 help

Without argument, prints a list of available commands. Given an
argument, shows help on a specific command.

=head1 CONTRIBUTING AND REPORTING BUGS

The main repository is located on L<https://github.com/olof/transmish>.
Feel free to open issues there or do pull requests. If you don't do
github, you can send me URL to git repositories elsewhere or send me
patches per mail.

=head1 COPYRIGHT

Copyright 2012, Olof Johansson <olof@ethup.se>

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice are preserved. This file is offered as-is, without any warranty.
